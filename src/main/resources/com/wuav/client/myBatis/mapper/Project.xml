<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wuav.client.dal.mappers.IProjectMapper">

    <resultMap id="projectResult" type="Project">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="createdAt" javaType="Date" column="created_at"/>
        <association property="customer" javaType="Customer">
            <id property="id" column="customer_id"/>
            <result property="nam" column="customer_name"/>
            <result property="email" column="customer_email"/>
            <result property="phoneNumber" column="customer_phone"/>
            <result property="type" column="customer_type"/>
            <association property="address" javaType="Address">
                <id property="id" column="address_id"/>
                <result property="street" column="street"/>
                <result property="city" column="city"/>
                <result property="zipCode" column="zipCode"/>
            </association>
        </association>
        <collection property="projectImages" javaType="ArrayList" column="id" ofType="CustomImage">
            <id property="id" column="imageId"/>
            <result property="imageType" column="image_type"/>
            <result property="imageUrl" column="image_url"/>
            <result property="isMainImage" column="is_main_image"/>
        </collection>
        <collection property="devices" ofType="Device">
            <id property="id" column="deviceId"/>
            <result property="name" column="deviceName"/>
            <result property="deviceType" column="device_type"/>
            <!-- Separation of before discrimination-->
            <discriminator javaType="String" column="device_type">
                <case value="PROJECTOR" resultType="Projector">
                    <result property="resolution" column="resolution"/>
                    <result property="connectionType" column="connection_type"/>
                    <result property="devicePort" column="device_port"/>
                </case>
                <case value="SPEAKER" resultType="Speaker">
                    <result property="power" column="power"/>
                    <result property="volume" column="volume"/>
                </case>
            </discriminator>
        </collection>
    </resultMap>

    <select id="getAllProjectsByUserId" resultMap="projectResult">
        SELECT
            p.id,
            p.name,
            p.description,
            p.created_at,
            c.id as customer_id,
            c.name as customer_name,
            c.email as customer_email,
            c.type as customer_type,
            c.phone_number as customer_phone,
            a.id as address_id,
            a.street,
            a.city,
            a.zip_code as zipCode,
            i.id as imageId,
            i.image_type,
            i.image_url,
            pi.is_main_image,
            d.id as deviceId,
            d.name as deviceName,
            d.device_type as device_type,
            pr.resolution,
            pr.connection_type,
            pr.device_port,
            sp.power,
            sp.volume
        FROM Project p
                 INNER JOIN user_project up ON p.id = up.project_id
                 INNER JOIN customer c ON p.customer_id = c.id
                 INNER JOIN address a ON c.address_id = a.id
                 LEFT JOIN project_image pi ON p.id = pi.project_id
                 LEFT JOIN image i ON pi.image_id = i.id
                 INNER JOIN project_device pd ON p.id = pd.project_id
                 INNER JOIN device d ON pd.device_id = d.id
                 LEFT JOIN projector pr ON d.id = pr.id
                 LEFT JOIN speaker sp ON d.id = sp.id
        WHERE up.user_id = ${userId}
    </select>


    <select id="getAllProjects" resultMap="projectResult">
        SELECT
            p.id,
            p.name,
            p.description,
            p.created_at,
            c.id as customer_id,
            c.name as customer_name,
            c.email as customer_email,
            c.type as customer_type,
            c.phone_number as customer_phone,
            a.id as address_id,
            a.street,
            a.city,
            a.zip_code as zipCode,
            i.id as imageId,
            i.image_type,
            i.image_url,
            pi.is_main_image,
            d.id as deviceId,
            d.name as deviceName,
            d.device_type as device_type,
            pr.resolution,
            pr.connection_type,
            pr.device_port,
            sp.power,
            sp.volume
        FROM Project p
                 INNER JOIN user_project up ON p.id = up.project_id
                 INNER JOIN customer c ON p.customer_id = c.id
                 INNER JOIN address a ON c.address_id = a.id
                 LEFT JOIN project_image pi ON p.id = pi.project_id
                 LEFT JOIN image i ON pi.image_id = i.id
                 INNER JOIN project_device pd ON p.id = pd.project_id -- inner to ensure that device have to be in project and will be displayed
                 INNER JOIN device d ON pd.device_id = d.id
                 LEFT JOIN projector pr ON d.id = pr.id
                 LEFT JOIN speaker sp ON d.id = sp.id
    </select>

    <select
            id="getProjectById"
            resultMap="projectResult"
    >
        SELECT
            p.id,
            p.name,
            p.description,
            p.created_at,
            c.id as customer_id,
            c.name as customer_name,
            c.email as customer_email,
            c.type as customer_type,
            c.phone_number as customer_phone,
            a.id as address_id,
            a.street,
            a.city,
            a.zip_code as zipCode,
            i.id as imageId,
            i.image_type,
            i.image_url,
            pi.is_main_image,
            d.id as deviceId,
            d.name as deviceName,
            d.device_type as device_type,
            pr.resolution,
            pr.connection_type,
            pr.device_port,
            sp.power,
            sp.volume
        FROM Project p
                 INNER JOIN user_project up ON p.id = up.project_id
                 INNER JOIN customer c ON p.customer_id = c.id
                 INNER JOIN address a ON c.address_id = a.id
                 LEFT JOIN project_image pi ON p.id = pi.project_id
                 LEFT JOIN image i ON pi.image_id = i.id
                 INNER JOIN project_device pd ON p.id = pd.project_id
                 INNER JOIN device d ON pd.device_id = d.id
                 LEFT JOIN projector pr ON d.id = pr.id
                 LEFT JOIN speaker sp ON d.id = sp.id
        WHERE p.id = #{id}
    </select>


    <insert
            id="createProject"
            parameterType="Project"
            flushCache="true"
            statementType="PREPARED"
            keyProperty="id"
            keyColumn="id"
            timeout="20">

        INSERT INTO Project (id, name,description,customer_id)
        VALUES (#{id}, #{name}, #{description},#{customerId})

    </insert>


    <insert
            id="addUserToProject"
            parameterType="map"
            flushCache="true"
            statementType="PREPARED"
            timeout="20">

        INSERT INTO user_project (user_id, project_id) VALUES (#{userId}, #{projectId})

    </insert>


    <insert
            id="addDeviceToProject"
            parameterType="map"
            flushCache="true"
            statementType="PREPARED"
            timeout="20">

        INSERT INTO project_device (project_id, device_id) VALUES (#{projectId}, #{deviceId})

    </insert>

    <update
            id="updateProjectForUserById"
            parameterType="Project"
            flushCache="true"
            statementType="PREPARED"
            timeout="20">

        UPDATE Project
        SET
            description = #{description}
        WHERE id = #{projectId}

    </update>


    <update
            id="updateNotes"
            parameterType="Project"
            flushCache="true"
            statementType="PREPARED"
            timeout="20">

        UPDATE Project
        SET
            description = #{content}
        WHERE id = #{projectId}

    </update>


    <delete id="deleteProjectById"
            parameterType="Project"
            flushCache="true"
            statementType="PREPARED">
        --  executes delete query
        DELETE
        FROM project
        WHERE id = #{projectId}
    </delete>


</mapper>


