<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wuav.client.dal.mappers.ImageMapper">

    <resultMap id="imageResult" type="CustomImage">
        <id property="id" column="id"/>
        <result property="imageType" column="image_type"/>
        <result property="imageUrl" column="image_url"/>
    </resultMap>

    <select id="getImageById" resultMap="imageResult">
        SELECT id, image_type, image_url FROM image
        WHERE id = #{imageId}
    </select>

    <select id="getImageByIdThatIsMain"
            resultMap="imageResult"
    >
        SELECT image.id, image.image_type, image.image_url
        FROM image
                 INNER JOIN project_image
                     ON image.id = project_image.image_id
        WHERE image.id = #{imageId}
          AND project_image.is_main_image = 1
    </select>

    <update id="updateImage"
            parameterType="CustomImage"
            flushCache="true"
            keyProperty=""
            keyColumn=""
            statementType="PREPARED">

        UPDATE image
        SET image_type = #{imageType},
            image_url = #{imageURL}
        WHERE id = #{imageId}
    </update>

    <!-- Define other SQL statements for ImageRepository methods here -->

    <insert
            id="createImage"
            parameterType="map"
            flushCache="true"
            keyProperty="id"
            keyColumn="id"
            statementType="PREPARED"
            timeout="20">

        INSERT INTO image (id, image_type, image_url) VALUES (#{imageId}, #{imageType}, #{imageUrl})

    </insert>

    <!--    INSERT IMAGE INTO PROJECT_IMAGE TABLE -->
    <insert
            id="addImageToProject"
            parameterType="map"
            flushCache="true"
            statementType="PREPARED"
            timeout="20">

        INSERT INTO project_image (project_id, image_id,is_main_image) VALUES (#{projectId}, #{imageId}, #{isMainImage})
    </insert>

    <delete id="deleteImage"
            parameterType="CustomImage"
            flushCache="true"
            statementType="PREPARED">
        --  executes delete query
        DELETE
        FROM image
        WHERE id = #{imageId}
    </delete>


</mapper>
