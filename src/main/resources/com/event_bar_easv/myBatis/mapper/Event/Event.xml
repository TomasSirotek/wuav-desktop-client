<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.event_bar_easv.dal.mappers.EventMapper">

    <resultMap id="eventResult" type="Event">
        <id property="eventId" column="eventId"/>
        <result property="eventName" column="eventName"/>
        <result property="startDate"  column="startDate"/>
        <result property="endDate"  column="endDate"/>
        <result property="location" column="location"/>
        <result property="description" column="description"/>
        <result property="createdAt"  column="createdAt"/>
        <result property="startTime"  column="startTime"/>
        <result property="endTime"  column="endTime"/>
        <collection property="participants" javaType="ArrayList" column="eventId" ofType="AppUser">
            <id property="id" column="userId"/>
            <result property="name" column="userName"/>
            <result property="email" column="userEmail"/>
        </collection>
        <collection property="ticketTypes" javaType="ArrayList" column="eventId" ofType="TicketType">
            <id property="id" column="typeId"/>
            <result property="type" column="typeName"/>
            <result property="benefit" column="typeBenefit"/>
        </collection>
        <collection property="specialTicketTypes" javaType="ArrayList" column="eventId" ofType="SpecialTicketType">
            <id property="id" column="spId"/>
            <result property="type" column="spType"/>
            <result property="benefit" column="spBenefit"/>
        </collection>
    </resultMap>


    <resultMap id="freeTicketResult" type="SpecialTicketType">
        <id property="id" column="ticketId"/>
        <result property="type" column="ticketType"/>
        <result property="benefit"  column="benefit"/>
    </resultMap>


    <select id="getAllEvents"
            resultMap="eventResult">
        SELECT e.id          as eventId,
               e.event_name  as eventName,
               e.start_date  as startDate,
               e.end_date    as endDate,
               e.location as location,
               e.description as description,
               e.created_at  as createdAt,
               e.start_time  as startTime,
               e.end_time    as endTime,
               u.id          as userId,
               u.name        as userName,
               u.email       as userEmail,
               t.id          as typeId,
               t.type_name   as typeName,
               t.benefit     as typeBenefit,
               sp.id         as spId,
               sp.sp_type    as spType,
               sp.sp_benefit as spBenefit
        FROM event AS e -->
                 LEFT OUTER JOIN user_event ue ON e.id = ue.event_id
                 LEFT OUTER JOIN app_user u ON ue.user_id = u.id
                 LEFT OUTER JOIN event_type et ON e.id = et.event_id
                 LEFT OUTER JOIN type t ON et.type_id = t.id
                 LEFT OUTER JOIN event_specialTicket es ON e.id = es.event_id
                 LEFT OUTER JOIN special_ticket_type sp ON es.special_id = sp.id;
    </select>

    <!--    this bullshit does not map column names with kebab case psw_has -->
    <!--    so it needs to be casted -->
    <select id="getAllSpecialTickets"
            resultMap="freeTicketResult">
      SELECT id as ticketId,
             sp_type as ticketType,
             sp_benefit as benefit
        FROM special_ticket_type
    </select>


    <insert
            id="createEvent"
            statementType="PREPARED"
            keyProperty="id"
            keyColumn="id"
            parameterType="Event"
            useGeneratedKeys="false"

    >
        INSERT INTO event (id,event_name,start_date,end_date,location,description,start_time,end_time)
        VALUES (#{id},#{title},#{startDate},#{endDate},#{loc},#{notes},#{startTime},#{endTime});
    </insert>

    <insert
            id="createTypeForTicket"
            statementType="PREPARED"
            keyProperty="id"
            keyColumn="id"
            parameterType="TicketType"
            useGeneratedKeys="false"

    >
        --  insert categoryId and movieId to joining table
        INSERT INTO type (id,type_name, benefit)
        VALUES (#{id},#{type},#{benefit})

    </insert>


    <insert
            id="createSpecialTicketType"
            statementType="PREPARED"
            keyProperty="id"
            keyColumn="id"
            parameterType="SpecialTicketType"
            useGeneratedKeys="false"

    >
        --  insert categoryId and movieId to joining table
        INSERT INTO special_ticket_type (id,sp_type, sp_benefit)
        VALUES (#{id},#{type},#{benefit})

    </insert>



    <insert
            id="addTypeToTicket"
            statementType="PREPARED"
            keyProperty="id"
            keyColumn="id"
            useGeneratedKeys="false"
            parameterType="map"
    >
        --  insert categoryId and movieId to joining table
        INSERT INTO event_type (event_id,type_id)
        VALUES (#{eventId},#{typeId})

    </insert>


    <insert
            id="addSpecialTicketToEvent"
            statementType="PREPARED"
            keyProperty=""
            keyColumn=""
            useGeneratedKeys="false"
            parameterType="map"
    >
        --  insert categoryId and movieId to joining table
        INSERT INTO event_specialTicket (event_id, special_id)
        VALUES (#{eventId},#{ticketId})

    </insert>

</mapper>



